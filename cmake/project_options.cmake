include_guard()

cpmaddpackage("gh:aminya/project_options@0.41.0")

if(DEBOUNCED_BUTTON_TESTS)
    set(ENABLE_CLANG_TIDY "ENABLE_CLANG_TIDY")
    set(ENABLE_CPPCHECK "ENABLE_CPPCHECK")
    set(ENABLE_COVERAGE "ENABLE_COVERAGE")

    set(ENABLE_SANITIZER_ADDRESS "ENABLE_SANITIZER_ADDRESS")
    set(ENABLE_SANITIZER_UNDEFINED "ENABLE_SANITIZER_UNDEFINED")
endif()

# Initialize project_options variable related to this project
# This overwrites `project_options` and sets `project_warnings`
# uncomment to enable the options. Some of them accept one or more inputs:
project_options(
    PREFIX
    "debounced_button"
    ENABLE_CACHE
    ${ENABLE_CPPCHECK}
    ${ENABLE_CLANG_TIDY}
    ENABLE_VS_ANALYSIS
    # ENABLE_INTERPROCEDURAL_OPTIMIZATION
    # ENABLE_NATIVE_OPTIMIZATION
    # ${ENABLE_DOXYGEN}
    ${ENABLE_COVERAGE}
    ${ENABLE_SANITIZER_ADDRESS}
    ${ENABLE_SANITIZER_UNDEFINED}
    # ${ENABLE_SANITIZER_THREAD}
    # ${ENABLE_SANITIZER_MEMORY}
    # ENABLE_SANITIZER_POINTER_COMPARE
    # ENABLE_SANITIZER_POINTER_SUBTRACT
    # ENABLE_CONTROL_FLOW_PROTECTION
    # ENABLE_STACK_PROTECTION
    # ENABLE_OVERFLOW_PROTECTION
    # ENABLE_ELF_PROTECTION
    # ENABLE_RUNTIME_SYMBOLS_RESOLUTION
    # ENABLE_COMPILE_COMMANDS_SYMLINK
    # ENABLE_PCH
    # PCH_HEADERS
    # WARNINGS_AS_ERRORS
    # ENABLE_INCLUDE_WHAT_YOU_USE
    # ENABLE_GCC_ANALYZER
    # ENABLE_BUILD_WITH_TIME_TRACE
    # ENABLE_UNITY
    # LINKER "lld"
)
