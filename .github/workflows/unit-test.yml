name: unit-test

on: push

jobs:
  examples:
    name: ${{ matrix.os }}-${{ matrix.compiler }}-${{matrix.build_type}}-${{matrix.generator}}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        compiler:
        - gcc
        - llvm
        generator:
        - Ninja
        build_type:
        - Debug
        include:
        - os: windows-latest
          build_type: Debug
          compiler: msvc
          generator: Visual Studio 17 2022
        - os: ubuntu-latest
          build_type: Release
          compiler: gcc
          generator: Ninja
    steps:
    - name: Check out repository
      uses: actions/checkout@v5
    - name: Cache CPM Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/CPM
          ~/AppData/Local/CPM
        key: cpm-${{ runner.os }}-${{ hashFiles('**/dependencies.cmake', '**/CMakeLists.txt') }}
        restore-keys: |
          cpm-${{ runner.os }}-

    - name: Cache Build and Tools
      uses: actions/cache@v4
      with:
        path: |
          ./build/
          ~/.cache/ccache
          ~/.ccache
          ~/.config/ccache
          ~/Library/Caches/ccache
          ${{ env.LOCALAPPDATA }}/ccache
          ${{ env.XDG_CACHE_HOME }}/ccache
        key: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-
          ${{ runner.os }}-${{ matrix.compiler }}-
    - uses: extractions/setup-just@v2
    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        ccache: true
        clang-tidy: true
        clangtidy: true
        cmake: true
        cmakelang: true
        compiler: ${{ matrix.compiler }}
        cppcheck: true
        doxygen: true
        gcovr: true
        ninja: true
        opencppcoverage: true
        python: true
        task: true
    - name: Configure CMAKE
      run: cmake -S . -B build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DDEBOUNCED_BUTTON_TESTS=ON
    - name: Build
      run: cmake --build build
    - name: Run Tests
      run: cd build && ctest --rerun-failed --output-on-failure
    - name: Coverage Report
      run: gcovr || true
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.compiler }}-${{matrix.build_type}}-${{matrix.generator}}
        path: ./build/
